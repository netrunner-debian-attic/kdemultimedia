Author: Harald Sitter <sitter@kde.org>
Origin: http://websvn.kde.org/?view=revision&revision=1241346
Description: Fix a memory leak with kmix pulse backend.
 This is the text of the commit message: 

 Do not emit signals directly but queue invokeMethod them to resolve
 a memleak in KMix/Oxygen caused by PA callbacks.
 
 Oxygen internally uses deleteLater to remove fancy animations from widgets.
 Every time PA changes its sinks (for example on track change in a Phonon player),
 KMix recreates its sliders thus causing animation creation inside the oxygen style.
 On deletion of old sliders the oxygen additions should get deleted.
 However since the switching originates in a direct call
 chain from PA (via callback -> mixer impl -> emit -> kmix UI internals -> oxygen) the
 deleteLater does not actually do anything and never gets executed thus leaking memory
 big time (12 hours of music -> >100MB of leaked memory).
 To resolve this issue the PA mixer now does not directly emit signals anymore (which
 translates to a direct function call) but instead uses the mixer's QMetaObject to
 deploy a queued invokeMethod call to the signal (therefore forcing queued emission
 and execution in the QEventLoop/QThread of the target, which in our case is the
 main application thread rather than the calling back PA thread).
 This has the advantage that even additional connections to the mixer singals
 will always get a queued emission neverminding what the type of the actual
 connection is.
 
 Also this now should resolve the only remaining memleak with PA.
 
 CCMAIL: kde-multimedia@kde.org
 CCMAIL: kde-packager@kde.org
 CCMAIL: cguthrie@mandriva.org
 BUG: 264089
 CCBUG: 237239

--- a/kmix/backends/mixer_pulse.cpp
+++ b/kmix/backends/mixer_pulse.cpp
@@ -754,7 +754,12 @@ void Mixer_PULSE::addWidget(int index)
         return;
     }
     addDevice((*map)[index]);
-    emit controlsReconfigured(_mixer->id());
+    // Do not emit directly to ensure all connected slots are executed
+    // in their own event loop.
+    QMetaObject::invokeMethod(this,
+                              "controlsReconfigured",
+                              Qt::QueuedConnection,
+                              Q_ARG(QString, _mixer->id()));
 }
 
 void Mixer_PULSE::removeWidget(int index)
@@ -778,7 +783,12 @@ void Mixer_PULSE::removeWidget(int index
         {
             delete *iter;
             m_mixDevices.erase(iter);
-            emit controlsReconfigured(_mixer->id());
+            // Do not emit directly to ensure all connected slots are executed
+            // in their own event loop.
+            QMetaObject::invokeMethod(this,
+                                      "controlsReconfigured",
+                                      Qt::QueuedConnection,
+                                      Q_ARG(QString, _mixer->id()));
             return;
         }
     }
@@ -799,7 +809,12 @@ void Mixer_PULSE::removeAllWidgets()
         delete *iter;
         m_mixDevices.erase(iter);
     }
-    emit controlsReconfigured(_mixer->id());
+    // Do not emit directly to ensure all connected slots are executed
+    // in their own event loop.
+    QMetaObject::invokeMethod(this,
+                              "controlsReconfigured",
+                              Qt::QueuedConnection,
+                              Q_ARG(QString, _mixer->id()));
 }
 
 void Mixer_PULSE::addDevice(devinfo& dev)
@@ -990,7 +1005,7 @@ int Mixer_PULSE::open()
         kDebug(67100) <<  "Using PulseAudio for mixer: " << m_mixerName;
         m_isOpen = true;
     }
- 
+
     return 0;
 }
 
